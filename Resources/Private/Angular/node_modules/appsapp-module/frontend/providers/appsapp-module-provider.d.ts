import 'rxjs/add/operator/map';
import { ConfigModel } from "../models/config";
import { AppsappModuleProviderMessages } from "appsapp-cli";
import { HttpClient } from "@angular/common/http";
export interface AppsappModuleProviderConfig {
    apiKey: string;
    projectId: string;
}
export declare class AppsappModuleProvider {
    private providerConfig;
    private providerMessages;
    private http;
    config: ConfigModel;
    private firebaseProject;
    private persistenceManager;
    private notificationProvider;
    constructor(providerConfig: AppsappModuleProviderConfig, providerMessages: AppsappModuleProviderMessages, http: HttpClient);
    /**
     * get http client
     * @returns HttpClient
     */
    getHttpClient(): HttpClient;
    /**
     * creates and return new persistable model
     * @param constructor
     * @param uuid string
     * @param data
     * @returns any
     */
    new(constructor: any, uuid?: any, data?: any): any;
    /**
     * sets platform provider
     * @param platform
     */
    setPlatform(platform: any): void;
    /**
     * get persitence manager
     * @returns {PersistenceManager}
     */
    getPersistenceManager(): any;
    /**
     * Login user with email and password
     * @param {string} username
     * @param {string} password
     * @returns {Promise<any>}
     */
    private userSignIn(username, password);
    /**
     * Login anonymous
     * @returns {Promise<any>}
     */
    private anonymousSignIn();
    /**
     * Logout user
     * @returns {Promise<any>}
     */
    private userSignOut();
    /**
     *
     * @param {string} data
     * @returns {string}
     */
    appsAppEncrypt(data: string): string;
}
